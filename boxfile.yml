run.config:
  engine: ruby

  # add extra packages
  extra_packages:
    - nodejs
    - nginx
    - ImageMagick


  build_triggers:
    - Gemfile
    - Gemfile.lock

deploy.config:
  extra_steps:
    - rake assets:precompile RAILS_ENV=production

  before_live:
    web.main:
      - rake db:setup_or_migrate RAILS_ENV=production

# add a database
data.db:
  image: nanobox/postgresql

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        PGPASSWORD=${DATA_DB_PASS} pg_dump -w -Fc -O -U ${DATA_DB_USER} production |
        gzip |
        curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-$(date -u +%Y-%m-%d.%H-%M-%S).sql.gz -X POST -T - >&2
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        sed 's/,/\n/g' |
        grep ${HOSTNAME} |
        sort |
        head -n-${BACKUP_COUNT:-1} |
        sed 's/.*: \?"\(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
        done

# add a shared storage for uploads
data.storage:
  image: nanobox/unfs:0.9

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        tar cz -C /data/var/db/unfs/ . |
        curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-$(date -u +%Y-%m-%d.%H-%M-%S).tgz -X POST -T - >&2
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        sed 's/,/\n/g' |
        grep ${HOSTNAME} |
        sort |
        head -n-${BACKUP_COUNT:-1} |
        sed 's/.*: \?"\(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
        done

# add a web component and give it a "start" command
web.main:
  start:
    nginx: nginx -c /app/config/nginx.conf
    puma: bundle exec puma -C /app/config/puma.rb

  # add writable dirs to the web component
  writable_dirs:
    - tmp
    - log
    - db

  network_dirs:
    data.storage:
      - storage

  # the path to a logfile you want streamed to the nanobox dashboard
  log_watch:
    rails: 'log/production.log'
